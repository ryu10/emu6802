0001                               * ram128
0002                               * populate MPU int. 128B with the first 128 bytes of Altair Baisc binary
0003                               *
0004 e0d0                          MIKBUG  equ $e0d0
0005                               *
0006 2000                                  ORG $2000  * somewhere in ram0[] before ABasic inits
0007 2000                          SRC     equ *
0008 2002                          DST     equ *+2 
0009                               *
0010 7000                                  ORG $7000
0011 7000 ce 70 24           [ 3 ] start   ldx #DATA128
0012 7003 ff 20 00           [ 6 ]         stx SRC
0013 7006 ce 00 00           [ 3 ]         ldx #0
0014 7009 ff 20 02           [ 6 ]         stx DST
0015 700c 86 80              [ 2 ]         ldaa #128
0016 700e fe 20 00           [ 5 ] next    ldx SRC
0017 7011 e6 00              [ 5 ]         ldab 0,X
0018 7013 7c 20 01           [ 6 ]         inc SRC+1  * OK only 128 bytes are transferred
0019 7016 fe 20 02           [ 5 ]         ldx DST
0020 7019 e7 00              [ 6 ]         stab 0,X
0021 701b 7c 20 03           [ 6 ]         inc DST+1
0022 701e 4a                 [ 2 ]         deca
0023 701f 26 ed              [ 4 ]         bne next
0024 7021 7e e0 d0           [ 3 ]         jmp #MIKBUG
0025                                       end
0026                               *
0027 7024 0d 76 00 f3 7e 18        DATA128 fcb  $0d, $76, $00, $f3, $7e, $18, $f9, $7e
     f9 7e
0028 702c 03 3c 00 00 48 38                fcb  $03, $3c, $00, $00, $48, $38, $00, $2c
     00 2c
0029 7034 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0030 703c 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0031 7044 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0032 704c 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0033 7054 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0034 705c 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0035 7064 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0036 706c 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0037 7074 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0038 707c 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0039 7084 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0040 708c 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0041 7094 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0042 709c 00 00 00 00 00 00                fcb  $00, $00, $00, $00, $00, $00, $00, $00
     00 00
0043                                
DATA128    7024
DST        2002
MIKBUG     e0d0
SRC        2000
next       700e
start      7000
DATA128    7024 *0027 0011 
DST        2002 *0008 0014 0019 0021 
MIKBUG     e0d0 *0004 0024 
SRC        2000 *0007 0012 0016 0018 
next       700e *0016 0023 
start      7000 *0011 
